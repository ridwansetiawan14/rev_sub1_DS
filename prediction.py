# -*- coding: utf-8 -*-
"""prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11REMndfiUjWtmyVYn-5SA8f8JlHvyNWX
"""

import pandas as pd
import joblib
from google.colab import drive

# Mount Google Drive
drive.mount('/content/drive')

# Path model dan scaler di Google Drive
MODEL_PATH = "/content/drive/MyDrive/Colab Notebooks/pkl_file/model_lr_scaled.pkl"
SCALER_PATH = "/content/drive/MyDrive/Colab Notebooks/pkl_file/scaler.pkl"

# Load model dan scaler
model = joblib.load(MODEL_PATH)
scaler = joblib.load(SCALER_PATH)

# Input interaktif dari pengguna
print("=== Masukkan Data Karyawan ===")
age = int(input("Usia: "))
monthly_income = int(input("Pendapatan Bulanan: "))
years_at_company = int(input("Lama Bekerja (tahun): "))
overtime = int(input("Lembur (1=Ya, 0=Tidak): "))
job_satisfaction = int(input("Kepuasan Kerja (1–4): "))
environment_satisfaction = int(input("Kepuasan Lingkungan (1–4): "))

# Siapkan data input sebagai DataFrame
data = pd.DataFrame([{
    'Age': age,
    'DailyRate': 700,
    'DistanceFromHome': 2,
    'Education': 3,
    'HourlyRate': 70,
    'JobInvolvement': 3,
    'JobLevel': 2,
    'JobSatisfaction': job_satisfaction,
    'MonthlyIncome': monthly_income,
    'MonthlyRate': 10000,
    'NumCompaniesWorked': 2,
    'PercentSalaryHike': 12,
    'PerformanceRating': 3,
    'RelationshipSatisfaction': 3,
    'StockOptionLevel': 1,
    'TotalWorkingYears': 10,
    'TrainingTimesLastYear': 2,
    'WorkLifeBalance': 3,
    'YearsAtCompany': years_at_company,
    'YearsInCurrentRole': 2,
    'YearsSinceLastPromotion': 1,
    'YearsWithCurrManager': 3,
    'BusinessTravel_Travel_Frequently': 0,
    'BusinessTravel_Travel_Rarely': 1,
    'Department_Research & Development': 0,
    'Department_Sales': 1,
    'EducationField_Life Sciences': 0,
    'EducationField_Marketing': 0,
    'EducationField_Medical': 1,
    'EducationField_Other': 0,
    'EducationField_Technical Degree': 0,
    'Gender_Male': 1,
    'JobRole_Human Resources': 0,
    'JobRole_Laboratory Technician': 1,
    'JobRole_Manager': 0,
    'JobRole_Manufacturing Director': 1,
    'JobRole_Research Director': 0,
    'JobRole_Research Scientist': 0,
    'JobRole_Sales Executive': 1,
    'JobRole_Sales Representative': 0,
    'MaritalStatus_Married': 1,
    'MaritalStatus_Single': 0,
    'OverTime_Yes': overtime
}])

# Transformasi dan prediksi
data_scaled = scaler.transform(data)
prediction = model.predict(data_scaled)

# Hasil
hasil = "Ya" if prediction[0] == 1 else "Tidak"
print("\n=== Hasil Prediksi Attrition ===")
print("Apakah karyawan akan keluar?:", hasil)